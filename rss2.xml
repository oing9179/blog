<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>oing9179 的笔记本儿</title>
    <link>https://oing9179.github.io/blog/</link>
    <atom:link href="/blog/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Develop with pleasure!</description>
    <pubDate>Sat, 03 Jun 2017 03:54:53 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>The ICMP Tunnel</title>
      <link>https://oing9179.github.io/blog/2017/06/The-ICMP-Tunnel/</link>
      <guid>https://oing9179.github.io/blog/2017/06/The-ICMP-Tunnel/</guid>
      <pubDate>Sat, 03 Jun 2017 03:36:00 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h1&gt;&lt;p&gt;经过一段时间的学习和研究，总算是把 ICMP Tunnel 的理论知识了解个大概了。&lt;br&gt;研究这项技术期间，出现次数对多的问题大概就是下面这几个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;包从哪里来的?&lt;/li&gt;
&lt;li&gt;包去哪儿了?&lt;/li&gt;
&lt;li&gt;Tunnel 的另一端是谁?&lt;br&gt; 答：操作系统，由操作系统进行包转发，就算设置了 tunnel 的对等端（Peer-to-Peer）也得由操作系统进行转发。于是 前两个问题基本上解决了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本文包含如下内容:&lt;br&gt;ICMP Tunnel 的基本技术细节, 包括但不限于 IP包、路由、&lt;code&gt;iptables&lt;/code&gt;、Python 代码.&lt;/p&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/06/The-ICMP-Tunnel/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Diary - Recruitment</title>
      <link>https://oing9179.github.io/blog/2017/06/Diary-Recruitment/</link>
      <guid>https://oing9179.github.io/blog/2017/06/Diary-Recruitment/</guid>
      <pubDate>Sat, 03 Jun 2017 02:22:41 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h1&gt;&lt;p&gt;又是好些天没写 blog 了。本篇 blog 包含如下内容:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Grand Theft Auto - Vice City 的哲&amp;#x2642;学版&lt;/li&gt;
&lt;li&gt;蓝桥 x 拉勾 举办的招聘会&lt;/li&gt;
&lt;li&gt;招聘会之后到 McDonald’s 就餐&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/06/Diary-Recruitment/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux Tunnel Device and Route</title>
      <link>https://oing9179.github.io/blog/2017/05/Linux-Tunnel-Device-and-Route/</link>
      <guid>https://oing9179.github.io/blog/2017/05/Linux-Tunnel-Device-and-Route/</guid>
      <pubDate>Fri, 12 May 2017 04:04:33 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h1&gt;&lt;p&gt;通过这些天的研究和各种资料的查阅，终于对路由以及 Linux 的 Tunnel 设备有个大致的了解了。&lt;br&gt;先说路由，然后再带着路由的知识谈 tun 设备。&lt;br&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/05/Linux-Tunnel-Device-and-Route/#disqus_thread</comments>
    </item>
    
    <item>
      <title>日记 - python-pytun scapy / Depression</title>
      <link>https://oing9179.github.io/blog/2017/05/Diary-Depression-pytun/</link>
      <guid>https://oing9179.github.io/blog/2017/05/Diary-Depression-pytun/</guid>
      <pubDate>Thu, 04 May 2017 13:33:47 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h1&gt;&lt;p&gt;好几天没写博客了，今天睡前写一篇糊弄一下吧。内容主要有2：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用 python-pytun 和 scapy 试着弄个包转发工具&lt;/li&gt;
&lt;li&gt;Depression 与自我恢复&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/05/Diary-Depression-pytun/#disqus_thread</comments>
    </item>
    
    <item>
      <title>SysRq 键 - Linux 系统崩掉前最后的救命稻草</title>
      <link>https://oing9179.github.io/blog/2017/04/The-Magic-SysRq-Key/</link>
      <guid>https://oing9179.github.io/blog/2017/04/The-Magic-SysRq-Key/</guid>
      <pubDate>Thu, 20 Apr 2017 04:24:48 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h1&gt;&lt;p&gt;今天看英语语法的时候 随意的看了一眼键盘，意外的发现 除了 &lt;code&gt;pause&lt;/code&gt; &lt;code&gt;break&lt;/code&gt; 和 &lt;code&gt;scroll&lt;/code&gt; 这几个键以外，还有个 &lt;code&gt;SysRq&lt;/code&gt;。然后查了一下，发现这个键在 Linux 下大有用途：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Linux, the kernel can be configured to provide functions for system debugging and crash recovery. This use is known as the “Magic SysRq key”.&lt;br&gt;在 Linux 下，通过对内核进行配置 可以让它来提供一些功能，比如调试操作系统以及崩溃恢复（Crash Recovery）。这种 SysRq 用法被称之为 “Magic SysRq key”。&lt;br&gt;- &lt;a href=&quot;https://en.wikipedia.org/wiki/System_request#Modern_uses&quot;&gt;System request - wikipedia.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当 Linux 系统崩溃但还没到 kernel panic 的地步的时候（比如 CPU soft lockup），就可以使用这棵最后的救命稻草。下面我就来介绍一下 SysRq 的使用方法。&lt;br&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/04/The-Magic-SysRq-Key/#disqus_thread</comments>
    </item>
    
    <item>
      <title>用 Docker &amp; Nginx 搭建自己的账本（Firefly）</title>
      <link>https://oing9179.github.io/blog/2017/04/Setup-Firefly-the-Financial-Manager-using-Docker-Nginx/</link>
      <guid>https://oing9179.github.io/blog/2017/04/Setup-Firefly-the-Financial-Manager-using-Docker-Nginx/</guid>
      <pubDate>Mon, 17 Apr 2017 23:47:03 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h1&gt;&lt;p&gt;“我辛辛苦苦挣的钱都去哪儿了”，我可不希望以后什么什么时候开始说这种话，于是 搭建个记账软件来记录自己的收支吧。&lt;br&gt;该软件优点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资金流向：比如钱都花在哪些类目上了，钱都流向哪些商家了。&lt;/li&gt;
&lt;li&gt;资金预算：比如打算每个月花多少钱在饮食上。&lt;/li&gt;
&lt;li&gt;分类 &amp;amp; 标签：比如钱都花在那些类目上了。&lt;/li&gt;
&lt;li&gt;交易记录：除了收入和支出记录外，如有多个银行账户的话 还能记录不同账户之间的转帐交易&lt;/li&gt;
&lt;li&gt;存钱罐（Piggy Banks）：比如想买个手机但是目前没有那么多预算，可以先弄个存钱罐，然后一点一点的往里面存。相当于一个长远的资金预算。&lt;/li&gt;
&lt;li&gt;账单：每月水电费之类的。&lt;/li&gt;
&lt;li&gt;规则：比如填写支出描述时自动填写预设的支出金额。&lt;/li&gt;
&lt;li&gt;报表（Reports）：按月、季、年生成报表，账户余额、资金流向、短期/长期预算、账单 等等。&lt;/li&gt;
&lt;li&gt;多货币：软妹币, 美刀, 英镑, 比特币，想用什么就用什么（不支持货币换算，在创建收支记录时候可以手动填写换算前后的金额）。&lt;/li&gt;
&lt;li&gt;数据导入导出：导入导出 &lt;code&gt;csv&lt;/code&gt; 格式的文件，进一步对资金流向做分析什么的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前我能想到的唯一缺点就是：没能和各种银行/支付机构（比如支付婊）进行接口对接，实现自动记录收入支出。&lt;br&gt;另外，该软件作者表示 “不支持自动支付重复性交易”，原因是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I believe that if you are serious about changing your financial habits, you should be aware of what happens on your accounts. The money you spend and the money you earn. By entering each transaction manually, you will &lt;em&gt;feel&lt;/em&gt; what you spend.&lt;br&gt;我认为如果你真的想改变你的财务习惯的话，你应该更关心你的账户，你花的钱还有你挣的钱。通过手动地录入每次交易，让你&lt;em&gt;切实体会到&lt;/em&gt;钱都花在哪里了。&lt;/p&gt;
&lt;/blockquote&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/04/Setup-Firefly-the-Financial-Manager-using-Docker-Nginx/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
