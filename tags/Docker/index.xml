<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Hotaru&#39;s Notebook</title>
    <link>https://oing9179.github.io/blog/tags/docker/</link>
    <description>Recent content in Docker on Hotaru&#39;s Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>Copyright © 2022, Hotaru Oyng.</copyright>
    <lastBuildDate>Sat, 19 Aug 2017 19:40:20 +0000</lastBuildDate><atom:link href="https://oing9179.github.io/blog/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用 Docker 和 Nginx 搭建 Wekan（Kanban-like todo-list）</title>
      <link>https://oing9179.github.io/blog/posts/2017/august/setup-wekan-the-kanban-like-todo-list-using-docker-nginx/</link>
      <pubDate>Sat, 19 Aug 2017 19:40:20 +0000</pubDate>
      
      <guid>https://oing9179.github.io/blog/posts/2017/august/setup-wekan-the-kanban-like-todo-list-using-docker-nginx/</guid>
      <description>Preface 明明有那么多事情还没做，为何偏偏不断的去查看手机上有哪些新消息呢？那就把还没做事都具化出来，用肉眼看到自己还有哪些事情没做，以此来督促自己啊。 今天上午找了一些 Todo-List 软件，然后发现了这个：wekan/wekan - github.com, 已经有 10k+ 个 Star 了。 想试用的话，打开 wekan.github.io 然后点击 &amp;ldquo;Try on Sandstorm&amp;rdquo;。 下面将介绍具体的搭建过程。
安装 &amp;amp; 配置 MongoDB 执行命令 apt-get install mongodb-server 编辑 /etc/mongodb.conf, 主要修改下面两个参数就够了, 其它的目前用不到. bind_ip=0.0.0.0: 让 MongoDB 监听所有IP, 方便 Docker 容器访问 port=27017: 这条配置默认是注释掉的, 取消注释即可 防火墙不要对外开放 27017 端口, 免得被别人乱搞 MongoDB 执行命令，允许来自 172.0.0.0/8 IP段的连接，docker 容器一般会被分配到这个地址 ufw allow from 172.0.0.0/8 执行命令重新启动 MongoDB 使上面修改过的设置生效: systemctl restart mongodb.service 安装 &amp;amp; 配置 Wekan Docker Image 安装 / 更新 docker-compose, 参考 这里 创建文件 docker-compose.</description>
    </item>
    
    <item>
      <title>用 Docker &amp; Nginx 搭建自己的账本（Firefly）</title>
      <link>https://oing9179.github.io/blog/posts/2017/april/setup-firefly-the-financial-manager-using-docker-nginx/</link>
      <pubDate>Tue, 18 Apr 2017 07:47:03 +0000</pubDate>
      
      <guid>https://oing9179.github.io/blog/posts/2017/april/setup-firefly-the-financial-manager-using-docker-nginx/</guid>
      <description>Preface &amp;ldquo;我辛辛苦苦挣的钱都去哪儿了&amp;rdquo;，我可不希望以后什么什么时候开始说这种话，于是 搭建个记账软件来记录自己的收支吧。 该软件优点如下：
资金流向：比如钱都花在哪些类目上了，钱都流向哪些商家了。 资金预算：比如打算每个月花多少钱在饮食上。 分类 &amp;amp; 标签：比如钱都花在那些类目上了。 交易记录：除了收入和支出记录外，如有多个银行账户的话 还能记录不同账户之间的转帐交易 存钱罐（Piggy Banks）：比如想买个手机但是目前没有那么多预算，可以先弄个存钱罐，然后一点一点的往里面存。相当于一个长远的资金预算。 账单：每月水电费之类的。 规则：比如填写支出描述时自动填写预设的支出金额。 报表（Reports）：按月、季、年生成报表，账户余额、资金流向、短期/长期预算、账单 等等。 多货币：软妹币, 美刀, 英镑, 比特币，想用什么就用什么（不支持货币换算，在创建收支记录时候可以手动填写换算前后的金额）。 数据导入导出：导入导出 csv 格式的文件，进一步对资金流向做分析什么的。 目前我能想到的唯一缺点就是：没能和各种银行/支付机构（比如支付婊）进行接口对接，实现自动记录收入支出。 另外，该软件作者表示 &amp;ldquo;不支持自动支付重复性交易&amp;rdquo;，原因是：
I believe that if you are serious about changing your financial habits, you should be aware of what happens on your accounts. The money you spend and the money you earn. By entering each transaction manually, you will feel what you spend. 我认为如果你真的想改变你的财务习惯的话，你应该更关心你的账户，你花的钱还有你挣的钱。通过手动地录入每次交易，让你切实体会到钱都花在哪里了。</description>
    </item>
    
    <item>
      <title>用 Docker 和 Nginx 搭建自己的云服务器（Nextcloud）</title>
      <link>https://oing9179.github.io/blog/posts/2017/march/setup-nextcloud-using-docker-and-nginx/</link>
      <pubDate>Wed, 15 Mar 2017 10:09:00 +0000</pubDate>
      
      <guid>https://oing9179.github.io/blog/posts/2017/march/setup-nextcloud-using-docker-and-nginx/</guid>
      <description>Preface 前些阵子瓷国各种网盘纷纷倒下，我也越来越担心自己的数据安全，没准哪天我的网盘帐号就被&amp;quot;无缘无故&amp;quot;的删掉什么的，于是我就琢磨着搭建个自己的私人网盘。现在这个时代最不缺的就是轮子，随便一搜就有好几个符合要求的自搭建（Self-Hosted）网盘软件：
Owncloud
不错的候选，不过一些高级特性（比如 Android/iOS app, 团队协作功能, etc.）需要购买订阅，而且还挺贵。 Cozy
同样是不错的候选，但是试用了一会儿发现制作得比较粗糙，大部分功能只是存在而已，不够用。 Nextcloud
Owncloud 的 fork，所有高级特性/企业团队协同功能全免费，还可以自己选择一些 Nextcloud 仓库内的 app 进行安装，Android app 也是免费使用（对应的 iOS app 售价是 $0.99）。 综上，我选择 Nextcloud。
接下来的问题是，我以后必定会在同一台主机内搭建多个网站，但 80 端口只能被一个进程监听。解决这个问题就是使用 Nginx 做反向代理，把入站连接根据域名/路径来转发到主机内的不同端口上。
还有一个问题就是通信安全问题。用 HTTP 这种明文通信协议的话，在通过某些恶意防火墙的时候 很可能会把通信内容给镜像下来 然后拿去分析。解决这个问题也不难，弄个免费 SSL 证书即可，比如 &amp;ldquo;Let&amp;rsquo;s Encrypt&amp;quot;。
注意： 本文使用 Ubuntu 作为服务器系统，部分特性（比如 ufw）不存在于其他 Linux 发行版里 或 需要代替方案（比如用 iptables 代替 ufw）。
安装 Nginx 执行命令来安装 Nginx apt-get install nginx，配置 Nginx 需要在安装 Nextcloud 后进行。 执行命令打开防火墙的 80 端口 ufw allow 80/tcp 安装 / 配置 MariaDB 执行命令来安装 MariaDB apt-get install mariadb-server mariadb-client 执行命令来初步配置 MariaDB mysql_secure_installation，然后按照提示进行操作 root 登录 mysql，执行下面的 SQL 语句，为 Nextcloud 的数据库做准备 -- 创建 nextcloud 数据库 CREATE DATABASE nextcloud CHARACTER SET = utf8 COLLATE = utf8_general_ci; -- 创建 nextcloud 用户 CREATE USER nextcloud IDENTIFIED BY &amp;#39;Passw0rd&amp;#39;; -- 让用户 nextcloud 拥有 nextcloud 数据库的完整权限 GRANT ALL ON nextcloud.</description>
    </item>
    
  </channel>
</rss>
