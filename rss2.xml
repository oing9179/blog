<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>oing9179 的笔记本儿</title>
    <link>https://oing9179.github.io/blog/</link>
    <atom:link href="/blog/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Develop with pleasure!</description>
    <pubDate>Mon, 10 Apr 2017 09:22:47 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>我不知道的JS</title>
      <link>https://oing9179.github.io/blog/2017/04/I-dont-know-JS/</link>
      <guid>https://oing9179.github.io/blog/2017/04/I-dont-know-JS/</guid>
      <pubDate>Mon, 10 Apr 2017 07:05:39 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;《你不知道的JS》 (You don’t know JS) 读书笔记&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h1&gt;&lt;p&gt;一直以为 JavaScript 就是 Script 版的 Java，但在看了这本书后才知道，它丫的就是个 Script，跟 Java 一点儿关系都没有。&lt;br&gt;JS 有一些 Java 没有的特性，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拿 &lt;code&gt;function&lt;/code&gt; 当对象用（看过书后发现 &lt;code&gt;function&lt;/code&gt; 真的是个对象）&lt;/li&gt;
&lt;li&gt;除了 &lt;code&gt;null&lt;/code&gt; 还有 &lt;code&gt;undefined&lt;/code&gt; 还有 &lt;code&gt;undecleared&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;var&lt;/code&gt; 定义的变量的作用域不符合常理（至少我觉得跟 Java 里定义出来的变量的作用域不一样）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;this&lt;/code&gt; is not this.&lt;/li&gt;
&lt;li&gt;“半残”的面向对象概念&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我本来还想指望看完这系列书后能对 JS 的刻板印象有所改观，然而事与愿违。&lt;br&gt;下面我将以一个水平不及初级Lava程序员的程序员的角度，为本书做一份笔记。&lt;br&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/04/I-dont-know-JS/#disqus_thread</comments>
    </item>
    
    <item>
      <title>用 Docker 和 Nginx 搭建自己的云服务器（Nextcloud）</title>
      <link>https://oing9179.github.io/blog/2017/03/Setup-Nextcloud-using-Docker-and-Nginx/</link>
      <guid>https://oing9179.github.io/blog/2017/03/Setup-Nextcloud-using-Docker-and-Nginx/</guid>
      <pubDate>Wed, 15 Mar 2017 02:09:00 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h1&gt;&lt;p&gt;前些阵子瓷国各种网盘纷纷倒下，我也越来越担心自己的数据安全，没准哪天我的网盘帐号就被”无缘无故”的删掉什么的，于是我就琢磨着搭建个自己的私人网盘。现在这个时代最不缺的就是轮子，随便一搜就有好几个符合要求的自搭建（Self-Hosted）网盘软件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://owncloud.org/&quot;&gt;Owncloud&lt;/a&gt;&lt;br&gt;  不错的候选，不过一些高级特性（比如 Android/iOS app, 团队协作功能, etc.）需要购买订阅，而且还挺贵。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cozy.io/en/&quot;&gt;Cozy&lt;/a&gt;&lt;br&gt;  同样是不错的候选，但是试用了一会儿发现制作得比较粗糙，大部分功能只是存在而已，不够用。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nextcloud.com/&quot;&gt;Nextcloud&lt;/a&gt;&lt;br&gt;  Owncloud 的 fork，所有高级特性/企业团队协同功能全免费，还可以自己选择一些 Nextcloud 仓库内的 app 进行安装，Android app 也是免费使用（对应的 iOS app 售价是 $0.99）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;综上，我选择 Nextcloud。&lt;br&gt;接下来的问题是，我以后必定会在同一台主机内搭建多个网站，但 80 端口只能被一个进程监听。解决这个问题就是使用 Nginx 做反向代理，把入站连接根据域名/路径来转发到主机内的不同端口上。&lt;br&gt;还有一个问题就是通信安全问题。用 HTTP 这种明文通信协议的话，在通过某些恶意防火墙的时候 很可能会把通信内容给镜像下来 然后拿去分析。解决这个问题也不难，弄个免费 SSL 证书即可，比如 “&lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt;“。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 本文使用 Ubuntu 作为服务器系统，部分特性（比如 &lt;code&gt;ufw&lt;/code&gt;）不存在于其他 Linux 发行版里 或 需要代替方案（比如用 &lt;code&gt;iptables&lt;/code&gt; 代替 &lt;code&gt;ufw&lt;/code&gt;）。&lt;br&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/03/Setup-Nextcloud-using-Docker-and-Nginx/#disqus_thread</comments>
    </item>
    
    <item>
      <title>用 Nginx 转发 V2Ray 的 WebSocket 连接</title>
      <link>https://oing9179.github.io/blog/2017/03/v2ray-as-WebSocket-Proxy-behind-Nginx/</link>
      <guid>https://oing9179.github.io/blog/2017/03/v2ray-as-WebSocket-Proxy-behind-Nginx/</guid>
      <pubDate>Sat, 11 Mar 2017 13:00:00 GMT</pubDate>
      <description>
      
        &lt;h1 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h1&gt;&lt;p&gt;有些地方网络环境很糟糕，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;防火墙 Drop 掉所有 UDP 包但是 DNS 除外&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实刚才写完才想到，没准防火墙只允许 53 端口的 UDP 包通过，毕竟这样配置起来简单而且也不怎么影响速度。但后来我想了想 暂时还是算了，因为让 V2Ray 监听 1~1023 端口需要 root 权限。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;除 80 和 443 之类的端口外的数据包传输速率都很低&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;既然这样，我就使用 80 或者 443 端口进行通信就是了。于是我看了下 v2ray 官方文档，提供了以下跟 HTTP/HTTPS 有关的选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TCP 并开启 HTTP 伪装&lt;/li&gt;
&lt;li&gt;WebSocket&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为我已经用 Nginx 监听 80 口了，所以新的连接必须通过 Nginx 分流到主机内的其他端口。&lt;a href=&quot;https://github.com/v2ray/v2ray-core/issues/386&quot;&gt;这个 Issue&lt;/a&gt; 内提到了 “http 伪装没有完全遵守 http 协议，无法被常见的 http server 分流。如果你需要分流，可以使用 websocket 传输方式。”，那我就用 WebSocket 吧。&lt;br&gt;哦对还有，有的更奇葩网络环境连 WebSocket 都不支持，具体可以到 &lt;a href=&quot;http://websocketstest.com/&quot;&gt;websocketstest.com&lt;/a&gt; 测试一下。&lt;br&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/03/v2ray-as-WebSocket-Proxy-behind-Nginx/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Present - 英语语法</title>
      <link>https://oing9179.github.io/blog/2017/02/Present-English-Grammar/</link>
      <guid>https://oing9179.github.io/blog/2017/02/Present-English-Grammar/</guid>
      <pubDate>Wed, 22 Feb 2017 13:09:12 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h2&gt;&lt;p&gt;在正文开始前先废话几句。&lt;br&gt;以前翻译 &lt;a href=&quot;https://en.wikipedia.org/wiki/MythBusters&quot;&gt;流言终结者(MythBusters)&lt;/a&gt; 的时候，当时的英语水平基本上就是 IELTS 1分的样子。翻译了6集后，不管是词汇量还是语感各方面大幅提升。直到近些日子，总感觉好像碰到了什么瓶颈，一直无法提升自身的英语水平。&lt;br&gt;于是我查了一些资料，发现 我之前翻译视频的这种学习方法适合给幼儿园小孩儿用，成年人应该用更逻辑化的学习方法。&lt;br&gt;于是我就又查了些资料，在知乎上的 &lt;a href=&quot;https://www.zhihu.com/question/20981568/answer/102003655&quot;&gt;这个高票回答&lt;/a&gt; 里推荐了 “English Grammar in Use” 这本书。这一系列的书一共有3本，本文将从第一本 “Essential English Grammar in Use” 开始。&lt;br&gt;借助现有的语感和经验，从零开始系统的学习英语。&lt;br&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/02/Present-English-Grammar/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux / Windows 加密用户文件夹</title>
      <link>https://oing9179.github.io/blog/2017/02/Encrypt-home-directory-on-Linux-and-Windows/</link>
      <guid>https://oing9179.github.io/blog/2017/02/Encrypt-home-directory-on-Linux-and-Windows/</guid>
      <pubDate>Wed, 22 Feb 2017 09:02:15 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/home&lt;/code&gt; 下的用户文件夹可谓是隐私重灾区（Windows 下的 &lt;code&gt;C:\Users\&amp;lt;用户名&amp;gt;&lt;/code&gt; 同理）。相比硬盘其他分区里的数据而言，用户文件夹下面会存放各种与用户隐私有关的文件。比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浏览器的历史记录, 自动填写的表单, Cookies, etc.&lt;/li&gt;
&lt;li&gt;有些人喜欢在桌面上放各种文件，包括但不限于公务文件&lt;/li&gt;
&lt;li&gt;大部分软件都在这里存放配置文件，配置文件里很可能包含个人信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决这个问题的办法就是加密用户文件夹。&lt;br&gt;本文分两部分内容，分别针对 Linux 和 Windows。&lt;br&gt;
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/02/Encrypt-home-directory-on-Linux-and-Windows/#disqus_thread</comments>
    </item>
    
    <item>
      <title>修复 Linux 英文语境下 Chrome 内中文字体问题</title>
      <link>https://oing9179.github.io/blog/2017/02/Fix-Unclear-Font-Display-in-Chrome-Web-Browser/</link>
      <guid>https://oing9179.github.io/blog/2017/02/Fix-Unclear-Font-Display-in-Chrome-Web-Browser/</guid>
      <pubDate>Tue, 14 Feb 2017 08:27:21 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;Preface&quot;&gt;&lt;a href=&quot;#Preface&quot; class=&quot;headerlink&quot; title=&quot;Preface&quot;&gt;&lt;/a&gt;Preface&lt;/h2&gt;&lt;p&gt;刚开始用 Linux Mint 的时候 系统语言是设置成中文的，带来的问题就是 想在 tty 里输入中文简直吃屎，甚至连中文都无法显示出来，我要是再装个什么软件包来解决这个问题 没准又要把我装好的系统搞坏掉。&lt;br&gt;于是我干脆在安装系统时候直接把语言设置为英文（en_US）。然后问题又来了，KDE Dolphin 里显示中文文件名的时候，那文字东倒西歪的 有些字甚至还在用不知道什么时候的旧写法。其实这个还好，麻烦更多的还是在浏览器这里。
      
      </description>
      
      <comments>https://oing9179.github.io/blog/2017/02/Fix-Unclear-Font-Display-in-Chrome-Web-Browser/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
